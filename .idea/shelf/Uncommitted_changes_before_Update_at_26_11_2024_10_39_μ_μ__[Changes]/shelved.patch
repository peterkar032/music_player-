Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
deleted file mode 100644
--- a/.idea/deploymentTargetSelector.xml	(revision 51aeddbfde0b21e2b21b302cb5d10b0e5f440713)
+++ /dev/null	(revision 51aeddbfde0b21e2b21b302cb5d10b0e5f440713)
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="deploymentTargetSelector">
-    <selectionStates>
-      <SelectionState runConfigName="app">
-        <option name="selectionMode" value="DROPDOWN" />
-        <DropdownSelection timestamp="2024-11-13T22:19:52.899821200Z">
-          <Target type="DEFAULT_BOOT">
-            <handle>
-              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\Hlias\.android\avd\Pixel_6_Pro_API_24.avd" />
-            </handle>
-          </Target>
-        </DropdownSelection>
-        <DialogSelection />
-      </SelectionState>
-    </selectionStates>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_11_2024_20_08__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_16_11_2024_20_08__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_16_11_2024_20_08__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_16_11_2024_20_08__Changes_1.xml	(revision 51aeddbfde0b21e2b21b302cb5d10b0e5f440713)
+++ /dev/null	(revision 51aeddbfde0b21e2b21b302cb5d10b0e5f440713)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_16_11_2024_20_08_[Changes]1" date="1731780524335" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_11_2024_20_08_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 16/11/2024 20:08 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_11_2024_20_08_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_16_11_2024_20_08_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_16_11_2024_20_08_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_16_11_2024_20_08_[Changes]1/shelved.patch	(revision 51aeddbfde0b21e2b21b302cb5d10b0e5f440713)
+++ /dev/null	(revision 51aeddbfde0b21e2b21b302cb5d10b0e5f440713)
@@ -1,68 +0,0 @@
-Index: app/src/main/java/com/example/music/MainActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.music;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONObject;\r\nimport android.media.MediaPlayer;\r\n\r\nimport java.io.IOException;\r\nimport java.io.UnsupportedEncodingException;\r\nimport java.net.URLEncoder;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private RecyclerView recyclerView;\r\n    private TrackAdapter trackAdapter;\r\n    private List<Track> trackList = new ArrayList<>();\r\n    private ProgressBar progressBar;\r\n    private EditText searchEditText;\r\n    private MediaPlayer mediaPlayer;\r\n    private Button playPauseButton;  // Κουμπί για αναπαραγωγή/παύση\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        // Εύρεση στοιχείων από το layout\r\n        recyclerView = findViewById(R.id.recycler_view);\r\n        progressBar = findViewById(R.id.progressBar);\r\n        searchEditText = findViewById(R.id.searchEditText);\r\n        Button searchButton = findViewById(R.id.searchButton);\r\n        playPauseButton = findViewById(R.id.PlayPauseButton);\r\n\r\n        // Αρχικοποίηση του RecyclerView και του adapter\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n        trackAdapter = new TrackAdapter(trackList, track -> {\r\n            // Παίξε το τραγούδι και εμφάνισε τα στοιχεία του\r\n            displayTrackDetails(track);  // Εμφάνιση στοιχείων τραγουδιού στην κύρια οθόνη\r\n            playTrack(track);  // Αναπαραγωγή του τραγουδιού\r\n        });\r\n\r\n        recyclerView.setAdapter(trackAdapter);\r\n\r\n        // Listener για το κουμπί αναζήτησης\r\n        searchButton.setOnClickListener(v -> {\r\n            String query = searchEditText.getText().toString().trim();\r\n            if (!query.isEmpty()) {\r\n                try {\r\n                    String encodedQuery = URLEncoder.encode(query, StandardCharsets.UTF_8.toString());\r\n                    searchTracks(encodedQuery);\r\n                } catch (UnsupportedEncodingException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n                Toast.makeText(this, \"Please enter a search query\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        // Listener για το κουμπί αναπαραγωγής/παύσης\r\n        playPauseButton.setOnClickListener(v -> {\r\n            if (mediaPlayer != null) {\r\n                if (mediaPlayer.isPlaying()) {\r\n                    mediaPlayer.pause();\r\n                    playPauseButton.setText(\"Play\");\r\n                } else {\r\n                    mediaPlayer.start();\r\n                    playPauseButton.setText(\"Pause\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void displayTrackDetails(Track track) {\r\n        // Ενημέρωση εικόνας άλμπουμ\r\n        ImageView albumArtImageView = findViewById(R.id.imageView2);\r\n        if (track.getAlbumArtUrl() != null && !track.getAlbumArtUrl().isEmpty()) {\r\n            Picasso.get()\r\n                    .load(track.getAlbumArtUrl())\r\n                    .placeholder(R.drawable.music)\r\n                    .error(R.drawable.music1)\r\n                    .into(albumArtImageView);\r\n        } else {\r\n            albumArtImageView.setImageResource(R.drawable.play);\r\n        }\r\n\r\n        // Ενημέρωση τίτλου τραγουδιού\r\n        TextView songTitleTextView = findViewById(R.id.SongTitle);\r\n        songTitleTextView.setText(track.getTitle());\r\n\r\n        // Ενημέρωση καλλιτέχνη\r\n        TextView artistTitleTextView = findViewById(R.id.ArtistTitle);\r\n        artistTitleTextView.setText(track.getArtist());\r\n    }\r\n\r\n    private void playTrack(Track track) {\r\n        // Σταματάμε την προηγούμενη αναπαραγωγή αν υπάρχει\r\n        if (mediaPlayer != null) {\r\n            mediaPlayer.stop();\r\n            mediaPlayer.release();\r\n        }\r\n\r\n        // Αναπαραγωγή από URL\r\n        try {\r\n            mediaPlayer = new MediaPlayer();\r\n            mediaPlayer.setDataSource(track.getTrackUrl());\r\n            mediaPlayer.prepareAsync(); // Προετοιμασία για αναπαραγωγή (async)\r\n\r\n            mediaPlayer.setOnPreparedListener(mp -> {\r\n                mp.start();\r\n                playPauseButton.setText(\"Pause\");\r\n                Toast.makeText(MainActivity.this, \"Playing: \" + track.getTitle() + \" by \" + track.getArtist(), Toast.LENGTH_SHORT).show();\r\n            });\r\n\r\n            mediaPlayer.setOnCompletionListener(mp -> {\r\n                Toast.makeText(MainActivity.this, \"Track Finished\", Toast.LENGTH_SHORT).show();\r\n                playPauseButton.setText(\"Play\");\r\n            });\r\n\r\n            mediaPlayer.setOnErrorListener((mp, what, extra) -> {\r\n                Toast.makeText(MainActivity.this, \"Error playing track\", Toast.LENGTH_SHORT).show();\r\n                return false;\r\n            });\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            Toast.makeText(this, \"Error: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void searchTracks(String query) {\r\n        progressBar.setVisibility(View.VISIBLE);\r\n        String url = \"https://api.deezer.com/search?q=\" + query;\r\n\r\n        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null,\r\n                new Response.Listener<JSONObject>() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        try {\r\n                            progressBar.setVisibility(View.GONE);\r\n                            if (response.has(\"data\")) {\r\n                                JSONArray tracksArray = response.getJSONArray(\"data\");\r\n                                trackList.clear();\r\n\r\n                                for (int i = 0; i < tracksArray.length(); i++) {\r\n                                    JSONObject trackJson = tracksArray.getJSONObject(i);\r\n                                    String trackTitle = trackJson.getString(\"title\");\r\n                                    String artist = trackJson.getJSONObject(\"artist\").getString(\"name\");\r\n                                    String albumArtUrl = trackJson.getJSONObject(\"album\").getString(\"cover_medium\");\r\n                                    String trackUrl = trackJson.getString(\"preview\");\r\n\r\n                                    trackList.add(new Track(trackTitle, artist, trackUrl, albumArtUrl));\r\n                                }\r\n                                trackAdapter.notifyDataSetChanged();\r\n                            } else {\r\n                                Log.d(\"Search Response\", \"No tracks found for query: \" + query);\r\n                                Toast.makeText(MainActivity.this, \"No tracks found.\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        } catch (Exception e) {\r\n                            Log.e(\"Response Error\", \"Error parsing response\", e);\r\n                            progressBar.setVisibility(View.GONE);\r\n                            Toast.makeText(MainActivity.this, \"Error processing results\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Log.e(\"Search Error\", \"Error: \" + error.getMessage());\r\n                        progressBar.setVisibility(View.GONE);\r\n                        Toast.makeText(MainActivity.this, \"Error retrieving data: \" + error.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n\r\n                });\r\n\r\n        Volley.newRequestQueue(this).add(jsonObjectRequest);\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        if (mediaPlayer != null) {\r\n            mediaPlayer.release();\r\n            mediaPlayer = null;\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/music/MainActivity.java b/app/src/main/java/com/example/music/MainActivity.java
---- a/app/src/main/java/com/example/music/MainActivity.java	(revision 234926b7d90b02f118d06b312facf8c7ea8981d6)
-+++ b/app/src/main/java/com/example/music/MainActivity.java	(date 1731779986075)
-@@ -13,12 +13,14 @@
- import androidx.appcompat.app.AppCompatActivity;
- import androidx.recyclerview.widget.LinearLayoutManager;
- import androidx.recyclerview.widget.RecyclerView;
-+import androidx.viewpager2.widget.ViewPager2;
- 
- import com.android.volley.Request;
- import com.android.volley.Response;
- import com.android.volley.VolleyError;
- import com.android.volley.toolbox.JsonObjectRequest;
- import com.android.volley.toolbox.Volley;
-+import com.google.android.material.tabs.TabLayout;
- import com.squareup.picasso.Picasso;
- 
- import org.json.JSONArray;
-@@ -42,10 +44,42 @@
-     private MediaPlayer mediaPlayer;
-     private Button playPauseButton;  // Κουμπί για αναπαραγωγή/παύση
- 
-+    TabLayout tabLayout;
-+    ViewPager2 viewPager2;
-+    ViewPagerAdapter viewPagerAdapter;
-+
-     @Override
-     protected void onCreate(Bundle savedInstanceState) {
-         super.onCreate(savedInstanceState);
-         setContentView(R.layout.activity_main);
-+        tabLayout = findViewById(R.id.tabLayout);
-+        viewPager2 = findViewById(R.id.viewPager);
-+        viewPagerAdapter = new ViewPagerAdapter(this);
-+        viewPager2.setAdapter(viewPagerAdapter);
-+        tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
-+            @Override
-+            public void onTabSelected(TabLayout.Tab tab) {
-+                viewPager2.setCurrentItem(tab.getPosition());
-+            }
-+
-+            @Override
-+            public void onTabUnselected(TabLayout.Tab tab) {
-+
-+            }
-+
-+            @Override
-+            public void onTabReselected(TabLayout.Tab tab) {
-+
-+            }
-+        });
-+
-+        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
-+            @Override
-+            public void onPageSelected(int position) {
-+                super.onPageSelected(position);
-+                tabLayout.getTabAt(position).select();
-+            }
-+        });
- 
-         // Εύρεση στοιχείων από το layout
-         recyclerView = findViewById(R.id.recycler_view);
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"corretto-21\" project-jdk-type=\"JavaSDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 51aeddbfde0b21e2b21b302cb5d10b0e5f440713)
+++ b/.idea/misc.xml	(date 1732650764228)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="corretto-21" project-jdk-type="JavaSDK" />
